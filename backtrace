==30041== Memcheck, a memory error detector
==30041== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==30041== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==30041== Command: ./server_rtype 1235
==30041== 
==30041== 
==30041== Process terminating with default action of signal 11 (SIGSEGV)
==30041==  Bad permissions for mapped region at address 0x44FD9F
==30041==    at 0x4EF70A7: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==30041==    by 0x454635: std::pair<std::string const, IComponent*>::~pair() (stl_pair.h:96)
==30041==    by 0x455431: std::__detail::_Hash_node<std::pair<std::string const, IComponent*>, true>::~_Hash_node() (hashtable_policy.h:170)
==30041==    by 0x45544F: void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<std::string const, IComponent*>, true> >::destroy<std::__detail::_Hash_node<std::pair<std::string const, IComponent*>, true> >(std::__detail::_Hash_node<std::pair<std::string const, IComponent*>, true>*) (new_allocator.h:124)
==30041==    by 0x4543F4: std::_Hashtable<std::string, std::pair<std::string const, IComponent*>, std::allocator<std::pair<std::string const, IComponent*> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<std::string const, IComponent*>, true>*) (hashtable.h:746)
==30041==    by 0x452FF4: std::_Hashtable<std::string, std::pair<std::string const, IComponent*>, std::allocator<std::pair<std::string const, IComponent*> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<std::string const, IComponent*>, true>*) (hashtable.h:763)
==30041==    by 0x4511EB: std::_Hashtable<std::string, std::pair<std::string const, IComponent*>, std::allocator<std::pair<std::string const, IComponent*> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear() (hashtable.h:1641)
==30041==    by 0x450209: std::_Hashtable<std::string, std::pair<std::string const, IComponent*>, std::allocator<std::pair<std::string const, IComponent*> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Hashtable(std::_Hashtable<std::string, std::pair<std::string const, IComponent*>, std::allocator<std::pair<std::string const, IComponent*> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&) (hashtable.h:918)
==30041==    by 0x44FD80: std::unordered_map<std::string, IComponent*, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, IComponent*> > >::unordered_map(std::unordered_map<std::string, IComponent*, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, IComponent*> > > const&) (unordered_map.h:168)
==30041==    by 0x44FDA6: ComponentManager::ComponentManager(ComponentManager const&) (ComponentManager.hh:10)
==30041==    by 0x44FDCC: Entity::Entity(Entity const&) (Entity.hh:6)
==30041==    by 0x44E942: JSONParser::getValue(Entity&, std::string const&, std::string&) (JSONParser.cpp:64)
==30041== 
==30041== HEAP SUMMARY:
==30041==     in use at exit: 36,253,630 bytes in 28 blocks
==30041==   total heap usage: 42 allocs, 14 frees, 36,254,753 bytes allocated
==30041== 
==30041== LEAK SUMMARY:
==30041==    definitely lost: 96 bytes in 3 blocks
==30041==    indirectly lost: 254 bytes in 11 blocks
==30041==      possibly lost: 480 bytes in 6 blocks
==30041==    still reachable: 36,252,800 bytes in 8 blocks
==30041==         suppressed: 0 bytes in 0 blocks
==30041== Rerun with --leak-check=full to see details of leaked memory
==30041== 
==30041== For counts of detected and suppressed errors, rerun with: -v
==30041== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
